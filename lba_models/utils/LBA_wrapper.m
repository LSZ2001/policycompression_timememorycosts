% LBA_wrapper
%
% Example script for nesting LBA model fitting and graphical output
%
% Uses exampledata from Donkin et al. (2009) Behav Res Methods
%
% Here we compare the fit of two models - model 1 allows drift rate to vary
% between conditions and fixes all other parameters; model 2 allows bound
% to vary between conditions and fixes all other parameters
%
% As the data were generated by conditions of different difficulty, model 1
% is a priori the most plausible
%
% SF 2012

clear all
close all

load exampledata.mat
models = 2;

%% Clean up data
data = LBA_clean(data);

%% Setup models (see help LBA_mle)
model(1).v = 3; model(1).A = 1; model(1).b = 1; model(1).t0 = 1; model(1).sv = 1;
model(2).v = 1; model(2).A = 1; model(2).b = 3; model(2).t0 = 1; model(2).sv = 1;
pArray{1} = [0.8 0.8 0.8 300 150 0.4 200];
pArray{2} = [0.8 300 300 300 150 0.4 200];
names{1} = ['v1 \t v2 \t v3 \t A \t B \t sv \t t0'];
names{2} = ['v \t A \t b1 \t b2 \t b3 \t sv \t t0'];

for m = 1:models
    [params{m} LL(m)] = LBA_mle(data, model(m), pArray{m});
end

%% Compare plots of data and model fit
for m = 1:models
    
    % Fit models
    Ncond = max(data.cond);
    cor = data.response == data.stim;
    [v A b sv t0] = LBA_parse(model(m), params{m}, Ncond);
 
    % Plot data and predictions
    LBA_plot(data, params{m}, model(m));
    
    % Print out parameters
    fprintf('\n\n Model %d parameters: \n\n',m);
    fprintf(['\n' names{m} '\n\n']);
    fprintf(num2str(params{m}));
    fprintf('\n\n Model %d log-likelihood: \n',m);
    fprintf(['\n' num2str(LL(m)) '\n\n']);
end